function U(o){let i=[{start:o.buffer.byteLength/2,size:o.buffer.byteLength/2}],u=new Map,b=[],h=[];function g(){return i}function l(){return u}function w(e){let n=0;for(;n<i.length&&i[n].start<e.start;)n++;i.splice(n,0,e)}let f;function p(e){f===void 0?f=e:(h.push({first:f,second:e}),f=void 0)}function y(){if(!h.length)return[0,0];let e=h.pop();return[e.first,e.second]}function A(){if(h.length<2)return[0,0];let[e]=h.splice(h.length-2,1);return[e.first,e.second]}function T(e){let n=u.get(e);if(!n)throw new Error("Invalid pointer: "+e);let t=c(n.size),s=new Uint8Array(o.buffer,e,n.size);return new Uint8Array(o.buffer,t,n.size).set(s),t}function a(){let e=Array.from(u.entries());if(e.length<2){console.error("Not enough entries to merge.");return}let[n,t]=e[e.length-2],[s,r]=e[e.length-1],z={...t,size:t.size+r.size};u.delete(s),u.set(n,z)}function c(e){for(let t=0;t<i.length;t++)if(i[t].size>=e){let s=i.splice(t,1)[0];if(s.size>e){let r={start:s.start+e,size:s.size-e};w(r)}return s.size=e,u.set(s.start,s),s.start}if(o.buffer.byteLength+e>o.buffer.byteLength*o.buffer.byteLength/65536){let t=Math.ceil(e/65536);o.grow(t)}let n={start:o.buffer.byteLength,size:e};return u.set(n.start,n),n.start}function d(e){let n=u.get(e);if(!n){console.error("Unable to find block");return}u.delete(e);for(let t=0;t<i.length;t++)i[t].start+i[t].size===n.start?(n.start=i[t].start,n.size+=i[t].size,i.splice(t,1),t--):n.start+n.size===i[t].start&&(n.size+=i[t].size,i.splice(t,1),t--);w(n)}function P(e){return b.find(n=>n.dataPtr===e)}function V(e){let n=c(4*e).start,t={dataPtr:n,length:0,capacity:4,elementTypeSize:e};return b.push(t),n}function S(e,n){let t=P(e);if(!t)throw new Error("Vector not found");if(t.length>=t.capacity){let r=t.dataPtr;t.dataPtr=c(2*t.capacity*t.elementTypeSize).start,t.capacity*=2;let z=new Uint8Array(o.buffer,r,t.length*t.elementTypeSize);new Uint8Array(o.buffer,t.dataPtr,t.capacity*t.elementTypeSize).set(z),d(r)}let s=new Uint8Array(o.buffer,t.dataPtr+t.length*t.elementTypeSize,t.elementTypeSize);for(let r=0;r<t.elementTypeSize;r++)s[r]=n>>r*8&255;t.length+=1}function L(e,n=4){let t=c(n),s=new Uint8Array(o.buffer,t.start,n);for(let r=0;r<n;r++)s[r]=e>>r*8&255;return t.start}function k(e,n=4){let t=new Uint8Array(o.buffer,e,n),s=0;for(let r=0;r<n;r++)s|=t[r]<<r*8;return s}return{alloc:c,dealloc:d,merge:a,save:p,undo:y,undoPenultimate:A,createVector:V,pushToVector:S,allocateValue:L,readValue:k,getFreeList:g,getUsedBlocks:l,copy:T}}function I(o,i=void 0){let g=[],l="default",w,f,p;function y(a,c){let d=new Int32Array(o.buffer,a,c);return Array.from(d)}function A(a,c){let d=new Uint8Array(o.buffer,a,c*4);return new TextDecoder().decode(d)}function T(a){if(a===777777){if(g.length>0){let c=g.join("");if(i){let d=document.createElement("p");d.innerHTML=c,i.appendChild(d)}else console.log(c);g=[]}return}if(l==="default"){if(a===999999){l="array";return}if(a===888888){l="string";return}g.push(a)}else if(l==="array"){if(!f){f=a;return}if(!w){w=a;let c=y(w,f);g.push(c),w=void 0,f=void 0,l="default"}}else if(l==="string"){if(!f){f=a;return}if(!p){p=a;let c=A(p,f);g.push(c),p=void 0,f=void 0,l="default"}}}return{receiveParams:T}}export{I as createDrawer,U as createMemoryManager};
