function U(s){let r=[{start:s.buffer.byteLength/2,size:s.buffer.byteLength/2}],f=new Map,y=[],l=[];function d(){return r}function w(){return f}function c(e){let n=0;for(;n<r.length&&r[n].start<e.start;)n++;r.splice(n,0,e)}let g;function b(e){g===void 0?g=e:(l.push({first:g,second:e}),g=void 0)}function p(){if(!l.length)return[0,0];let e=l.pop();return[e.first,e.second]}function A(){if(l.length<2)return[0,0];let[e]=l.splice(l.length-2,1);return[e.first,e.second]}function a(e){let n=f.get(e);if(!n)throw new Error("Invalid pointer: "+e);let t=h(n.size),o=new Uint8Array(s.buffer,e,n.size);return new Uint8Array(s.buffer,t,n.size).set(o),t}function u(){let e=Array.from(f.entries());if(e.length<2){console.error("Not enough entries to merge.");return}let[n,t]=e[e.length-2],[o,i]=e[e.length-1],T={...t,size:t.size+i.size};f.delete(o),f.set(n,T)}function h(e){for(let t=0;t<r.length;t++)if(r[t].size>=e){let o=r.splice(t,1)[0];if(o.size>e){let i={start:o.start+e,size:o.size-e};c(i)}return o.size=e,f.set(o.start,o),o.start}if(s.buffer.byteLength+e>s.buffer.byteLength*s.buffer.byteLength/65536){let t=Math.ceil(e/65536);s.grow(t)}let n={start:s.buffer.byteLength,size:e};return f.set(n.start,n),n.start}function z(e){let n=f.get(e);if(!n){console.error("Unable to find block");return}f.delete(e);for(let t=0;t<r.length;t++)r[t].start+r[t].size===n.start?(n.start=r[t].start,n.size+=r[t].size,r.splice(t,1),t--):n.start+n.size===r[t].start&&(n.size+=r[t].size,r.splice(t,1),t--);c(n)}function V(e){return y.find(n=>n.dataPtr===e)}function P(e){let n=h(4*e).start,t={dataPtr:n,length:0,capacity:4,elementTypeSize:e};return y.push(t),n}function S(e,n){let t=V(e);if(!t)throw new Error("Vector not found");if(t.length>=t.capacity){let i=t.dataPtr;t.dataPtr=h(2*t.capacity*t.elementTypeSize).start,t.capacity*=2;let T=new Uint8Array(s.buffer,i,t.length*t.elementTypeSize);new Uint8Array(s.buffer,t.dataPtr,t.capacity*t.elementTypeSize).set(T),z(i)}let o=new Uint8Array(s.buffer,t.dataPtr+t.length*t.elementTypeSize,t.elementTypeSize);for(let i=0;i<t.elementTypeSize;i++)o[i]=n>>i*8&255;t.length+=1}function L(e,n=4){let t=h(n),o=new Uint8Array(s.buffer,t.start,n);for(let i=0;i<n;i++)o[i]=e>>i*8&255;return t.start}function k(e,n=4){let t=new Uint8Array(s.buffer,e,n),o=0;for(let i=0;i<n;i++)o|=t[i]<<i*8;return o}return{alloc:h,dealloc:z,merge:u,save:b,undo:p,undoPenultimate:A,createVector:P,pushToVector:S,allocateValue:L,readValue:k,getFreeList:d,getUsedBlocks:w,copy:a}}function M(s,r=void 0){let l=[],d="default",w,c,g;function b(a,u){let h=new Int32Array(s.buffer,a,u);return Array.from(h)}function p(a,u){let h=new Uint8Array(s.buffer,a,u*4);return new TextDecoder().decode(h)}function A(a){if(d==="default"){if(a===999999){d="array",l.pop();return}if(a===888888){d="string",l.pop();return}r?r.innerHTML=arrayData:console.log(a)}else if(d==="array"){if(!w){w=a;return}if(!c){c=a;let u=b(w,c);r?r.innerHTML=u:console.log(u),w=void 0,c=void 0,d="default"}}else if(d==="string"){if(!c){c=a;return}if(!g){g=a;let u=p(g,c);r?r.innerHTML=arrayData:console.log(u),g=void 0,c=void 0,d="default"}}}return{receiveParams:A}}export{M as createDrawer,U as createMemoryManager};
