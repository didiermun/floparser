function U(f){let i=[{start:f.buffer.byteLength/2,size:f.buffer.byteLength/2}],u=new Map,z=[],h=[];function g(){return i}function d(){return u}function w(e){let n=0;for(;n<i.length&&i[n].start<e.start;)n++;i.splice(n,0,e)}let c;function p(e){c===void 0?c=e:(h.push({first:c,second:e}),c=void 0)}function S(){if(!h.length)return[0,0];let e=h.pop();return[e.first,e.second]}function T(){if(h.length<2)return[0,0];let[e]=h.splice(h.length-2,1);return[e.first,e.second]}function P(e){let n=u.get(e);if(!n)throw new Error("Invalid pointer: "+e);let t=s(n.size),o=new Uint8Array(f.buffer,e,n.size);return new Uint8Array(f.buffer,t,n.size).set(o),t}function a(){let e=Array.from(u.entries());if(e.length<2){console.error("Not enough entries to merge.");return}let[n,t]=e[e.length-2],[o,r]=e[e.length-1],V={...t,size:t.size+r.size};u.delete(o),u.set(n,V)}function s(e){for(let t=0;t<i.length;t++)if(i[t].size>=e){let o=i.splice(t,1)[0];if(o.size>e){let r={start:o.start+e,size:o.size-e};w(r)}return o.size=e,u.set(o.start,o),o.start}if(f.buffer.byteLength+e>f.buffer.byteLength*f.buffer.byteLength/65536){let t=Math.ceil(e/65536);f.grow(t)}let n={start:f.buffer.byteLength,size:e};return u.set(n.start,n),n.start}function l(e){let n=u.get(e);if(!n){console.error("Unable to find block");return}u.delete(e);for(let t=0;t<i.length;t++)i[t].start+i[t].size===n.start?(n.start=i[t].start,n.size+=i[t].size,i.splice(t,1),t--):n.start+n.size===i[t].start&&(n.size+=i[t].size,i.splice(t,1),t--);w(n)}function y(e){return z.find(n=>n.dataPtr===e)}function A(e){let n=s(4*e).start,t={dataPtr:n,length:0,capacity:4,elementTypeSize:e};return z.push(t),n}function b(e,n){let t=y(e);if(!t)throw new Error("Vector not found");if(t.length>=t.capacity){let r=t.dataPtr;t.dataPtr=s(2*t.capacity*t.elementTypeSize).start,t.capacity*=2;let V=new Uint8Array(f.buffer,r,t.length*t.elementTypeSize);new Uint8Array(f.buffer,t.dataPtr,t.capacity*t.elementTypeSize).set(V),l(r)}let o=new Uint8Array(f.buffer,t.dataPtr+t.length*t.elementTypeSize,t.elementTypeSize);for(let r=0;r<t.elementTypeSize;r++)o[r]=n>>r*8&255;t.length+=1}function L(e,n=4){let t=s(n),o=new Uint8Array(f.buffer,t.start,n);for(let r=0;r<n;r++)o[r]=e>>r*8&255;return t.start}function k(e,n=4){let t=new Uint8Array(f.buffer,e,n),o=0;for(let r=0;r<n;r++)o|=t[r]<<r*8;return o}return{alloc:s,dealloc:l,merge:a,save:p,undo:S,undoPenultimate:T,createVector:A,pushToVector:b,allocateValue:L,readValue:k,getFreeList:g,getUsedBlocks:d,copy:P}}function I(f,i=void 0){let g=[],d="default",w,c,p;function S(a,s){let l=new Int32Array(f.buffer,a,s);return Array.from(l)}function T(a,s){console.log(s,s/4);let l=new Uint8Array(f.buffer,a,s*4),y="";for(let A=0;A<l.length;A+=4){let b=l[A];b>=32&&b<=126?y+=String.fromCharCode(b):y+=b.toString()}return y}function P(a){if(a===777777){if(g.length>0){let s=g.join("");if(i){let l=document.createElement("p");l.innerHTML=s,i.appendChild(l)}else console.log(s);g=[]}return}if(d==="default"){if(a===999999){d="array";return}if(a===888888){d="string";return}g.push(a)}else if(d==="array"){if(!c){c=a;return}if(!w){w=a;let s=S(w,c);g.push(s),w=void 0,c=void 0,d="default"}}else if(d==="string"){if(!c){c=a;return}if(!p){p=a;let s=T(p,c);g.push(s),p=void 0,c=void 0,d="default"}}}return{receiveParams:P}}export{I as createDrawer,U as createMemoryManager};
